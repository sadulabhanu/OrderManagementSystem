//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OrderManagementSystemEntities : DbContext
    {
        public OrderManagementSystemEntities()
            : base("name=OrderManagementSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administrator> Administrators { get; set; }
        public virtual DbSet<Buyer> Buyers { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual ObjectResult<sp_getallOrders_Result> sp_getallOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getallOrders_Result>("sp_getallOrders");
        }
    
        public virtual ObjectResult<sp_getordersforBuyer_Result> sp_getordersforBuyer(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getordersforBuyer_Result>("sp_getordersforBuyer", iDParameter);
        }
    
        public virtual ObjectResult<sp_Orders_CRUD_Result> sp_Orders_CRUD(Nullable<int> orderID, Nullable<int> productID, string order_Status, Nullable<int> buyerID, string option)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var order_StatusParameter = order_Status != null ?
                new ObjectParameter("Order_Status", order_Status) :
                new ObjectParameter("Order_Status", typeof(string));
    
            var buyerIDParameter = buyerID.HasValue ?
                new ObjectParameter("BuyerID", buyerID) :
                new ObjectParameter("BuyerID", typeof(int));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Orders_CRUD_Result>("sp_Orders_CRUD", orderIDParameter, productIDParameter, order_StatusParameter, buyerIDParameter, optionParameter);
        }
    }
}
